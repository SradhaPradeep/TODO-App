[
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "LogoutView",
        "importPath": "django.contrib.auth.views",
        "description": "django.contrib.auth.views",
        "isExtraImport": true,
        "detail": "django.contrib.auth.views",
        "documentation": {}
    },
    {
        "label": "LoginView",
        "importPath": "django.contrib.auth.views",
        "description": "django.contrib.auth.views",
        "isExtraImport": true,
        "detail": "django.contrib.auth.views",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "QuerySet",
        "importPath": "django.db.models.query",
        "description": "django.db.models.query",
        "isExtraImport": true,
        "detail": "django.db.models.query",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "FormView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "todoapp.APP.migrations.0001_initial",
        "description": "todoapp.APP.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Tasks',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "todoapp.APP.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "todoapp.APP.migrations.0002_alter_tasks_options_tasks_description_and_more",
        "description": "todoapp.APP.migrations.0002_alter_tasks_options_tasks_description_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('APP', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='tasks',\n            options={},\n        ),",
        "detail": "todoapp.APP.migrations.0002_alter_tasks_options_tasks_description_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "todoapp.APP.migrations.0003_alter_tasks_options_alter_tasks_created",
        "description": "todoapp.APP.migrations.0003_alter_tasks_options_alter_tasks_created",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('APP', '0002_alter_tasks_options_tasks_description_and_more'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='tasks',\n            options={'ordering': ['completed']},\n        ),\n        migrations.AlterField(",
        "detail": "todoapp.APP.migrations.0003_alter_tasks_options_alter_tasks_created",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "kind": 6,
        "importPath": "todoapp.APP.apps",
        "description": "todoapp.APP.apps",
        "peekOfCode": "class AppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'APP'",
        "detail": "todoapp.APP.apps",
        "documentation": {}
    },
    {
        "label": "Tasks",
        "kind": 6,
        "importPath": "todoapp.APP.models",
        "description": "todoapp.APP.models",
        "peekOfCode": "class Tasks(models.Model):\n    task = models.CharField(max_length=500,null=True,blank=True)\n    user = models.ForeignKey(User,on_delete=models.CASCADE,null=True,blank=True)\n    description = models.TextField(default='')\n    completed = models.BooleanField(default=False)\n    created = models.DateTimeField(auto_now_add=True)\n    def _str_(self): \n        return self.task\n    class Meta:\n        ordering = ['completed']",
        "detail": "todoapp.APP.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "todoapp.APP.urls",
        "description": "todoapp.APP.urls",
        "peekOfCode": "urlpatterns = [\n    path('',home,name='home'),\n    path('task-create/',TaskCreate.as_view(),name='createtask'),\n    path('register/',RegisterPage.as_view(),name='register'),\n    path('login/',CustomLoginView.as_view(),name='login'),\n    path('lists/',TaskList.as_view(),name='task'),\n    path('logout/',LogoutView.as_view(),name='logout'),\n    path('task-details/<int:pk>',TaskDetailView.as_view(),name='task_details'),\n    path('task-update/<int:pk>',TaskUpdate.as_view(),name='update'),\n    path('task-delete/<int:pk>',TaskDelete.as_view(),name='delete'),",
        "detail": "todoapp.APP.urls",
        "documentation": {}
    },
    {
        "label": "CustomLoginView",
        "kind": 6,
        "importPath": "todoapp.APP.views",
        "description": "todoapp.APP.views",
        "peekOfCode": "class CustomLoginView(LoginView):\n    template_name = 'login.html'\n    fields = '__all__'\n    redirect_authenticated_user = True\n    success_url = '/task/'\n    def get_success_url(self):\n        return super().get_success_url()\nclass RegisterPage(FormView):\n    template_name = 'registration/register.html'\n    form_class = UserCreationForm  # Corrected attribute name",
        "detail": "todoapp.APP.views",
        "documentation": {}
    },
    {
        "label": "RegisterPage",
        "kind": 6,
        "importPath": "todoapp.APP.views",
        "description": "todoapp.APP.views",
        "peekOfCode": "class RegisterPage(FormView):\n    template_name = 'registration/register.html'\n    form_class = UserCreationForm  # Corrected attribute name\n    redirect_authenticated_user = True\n    success_url = reverse_lazy('task')\n    def form_valid(self, form):\n        user = form.save()\n        if user is not None:\n            login(self.request, user)\n        return super().form_valid(form)  # Corrected method name",
        "detail": "todoapp.APP.views",
        "documentation": {}
    },
    {
        "label": "TaskCreate",
        "kind": 6,
        "importPath": "todoapp.APP.views",
        "description": "todoapp.APP.views",
        "peekOfCode": "class TaskCreate(LoginRequiredMixin,CreateView):\n    model = Tasks\n    fields = ['task','completed','description']\n    success_url = reverse_lazy('task')\n    template_name = 'task_create.html'\n    def form_valid(self, form):\n         form.instance.user = self.request.user\n         return super().form_valid(form)\nclass TaskList(LoginRequiredMixin,ListView):\n    model = Tasks",
        "detail": "todoapp.APP.views",
        "documentation": {}
    },
    {
        "label": "TaskList",
        "kind": 6,
        "importPath": "todoapp.APP.views",
        "description": "todoapp.APP.views",
        "peekOfCode": "class TaskList(LoginRequiredMixin,ListView):\n    model = Tasks\n    context_object_name = 'task'\n    template_name= 'task_list.html'\n    def get_queryset(self): \n        return Tasks.objects.filter(user=self.request.user)\nclass TaskDetailView(DetailView):\n    model = Tasks\n    template_name = 'task_details.html'\nclass TaskUpdate(UpdateView):",
        "detail": "todoapp.APP.views",
        "documentation": {}
    },
    {
        "label": "TaskDetailView",
        "kind": 6,
        "importPath": "todoapp.APP.views",
        "description": "todoapp.APP.views",
        "peekOfCode": "class TaskDetailView(DetailView):\n    model = Tasks\n    template_name = 'task_details.html'\nclass TaskUpdate(UpdateView):\n    model = Tasks\n    fields = ['task','completed','description']\n    success_url = reverse_lazy('task')\n    template_name = 'task_create.html'\nclass TaskDelete(DeleteView):\n    model = Tasks",
        "detail": "todoapp.APP.views",
        "documentation": {}
    },
    {
        "label": "TaskUpdate",
        "kind": 6,
        "importPath": "todoapp.APP.views",
        "description": "todoapp.APP.views",
        "peekOfCode": "class TaskUpdate(UpdateView):\n    model = Tasks\n    fields = ['task','completed','description']\n    success_url = reverse_lazy('task')\n    template_name = 'task_create.html'\nclass TaskDelete(DeleteView):\n    model = Tasks\n    success_url = reverse_lazy('task')\n    template_name = 'task_delete.html'",
        "detail": "todoapp.APP.views",
        "documentation": {}
    },
    {
        "label": "TaskDelete",
        "kind": 6,
        "importPath": "todoapp.APP.views",
        "description": "todoapp.APP.views",
        "peekOfCode": "class TaskDelete(DeleteView):\n    model = Tasks\n    success_url = reverse_lazy('task')\n    template_name = 'task_delete.html'",
        "detail": "todoapp.APP.views",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "todoapp.APP.views",
        "description": "todoapp.APP.views",
        "peekOfCode": "def home(request):\n    return render(request, 'home.html')\nclass CustomLoginView(LoginView):\n    template_name = 'login.html'\n    fields = '__all__'\n    redirect_authenticated_user = True\n    success_url = '/task/'\n    def get_success_url(self):\n        return super().get_success_url()\nclass RegisterPage(FormView):",
        "detail": "todoapp.APP.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "todoapp.todoapp.asgi",
        "description": "todoapp.todoapp.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "todoapp.todoapp.asgi",
        "documentation": {}
    },
    {
        "label": "PositionForm",
        "kind": 6,
        "importPath": "todoapp.todoapp.forms",
        "description": "todoapp.todoapp.forms",
        "peekOfCode": "class PositionForm(forms.Form):\n    position = forms.CharField()",
        "detail": "todoapp.todoapp.forms",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-$z%@0mefk5&2bh006fni!-$oel+*u7d#y0j4nb$15+htkflyiz'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-$z%@0mefk5&2bh006fni!-$oel+*u7d#y0j4nb$15+htkflyiz'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'APP'",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'APP'\n]\nMIDDLEWARE = [",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'todoapp.urls'",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "ROOT_URLCONF = 'todoapp.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "WSGI_APPLICATION = 'todoapp.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = 'home'  ",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = 'home'  \nLOGOUT_REDIRECT_URL = 'home'",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = 'home'  \nLOGOUT_REDIRECT_URL = 'home'",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = 'home'  \nLOGOUT_REDIRECT_URL = 'home'",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = 'home'  \nLOGOUT_REDIRECT_URL = 'home'",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = 'home'  \nLOGOUT_REDIRECT_URL = 'home'",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "todoapp.todoapp.settings",
        "description": "todoapp.todoapp.settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = 'home'",
        "detail": "todoapp.todoapp.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "todoapp.todoapp.urls",
        "description": "todoapp.todoapp.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include(\"APP.urls\")),\n]",
        "detail": "todoapp.todoapp.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "todoapp.todoapp.wsgi",
        "description": "todoapp.todoapp.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "todoapp.todoapp.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "todoapp.manage",
        "description": "todoapp.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'todoapp.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "todoapp.manage",
        "documentation": {}
    }
]